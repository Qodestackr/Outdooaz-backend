
Product service start ampqlib []

User sends a list of product IDs to buy

Create an order with the products with a total value of sum of product prices




A host lists his/her property details along with pricing, rules, facilities available etc
A user that is looking for a vacation rental searches for a place on the app. 
They typically set destination, a search radius, price range and other preferences
Upon finding a perfect place to rent, a user then makes a booking request
The host receives a booking request and then decides whether to approve or not

If a host approves a request, an amount gets deducted from user’s bank via a payment gateway
After the stay, the payment automatically gets paid to the host
User and host both review each other


There are more users that will use “search” than users that will make a booking. 
You will have to make sure that the search is performant, but at the same time, you will have to ensure that the 
failure of search services doesn’t take down your app’s booking functionality. Booking is a core feature, and if 
I were to prioritize, I would prioritize this above everything else.
Chat is a two-way freeway. We usually talk about creating an API (helps your app communicate with cloud application and database), 
but in this case, an API won’t be able to handle chat, search and booking altogether. Keep a note that chat is real-time, single 
threaded(jargon!) and a high resource hungry operation. There is a need to create a separate queue service that times messages 
and communication with chat services.
Third party services like payment gateways, verification services, customer support, etc go down all the time. 
Sadly, 90% uptime is not sufficient! But this has a domino effect. For example, in poorly written apps, such failures 
tend to take the entire system down. For example, if your chat service provider is down, there’s no reason for your 
listing search to not work. To me, that’s a poorly thought out technology piece.
What if a host is adding his/her property details to the app just tapped “submit” button and loses internet 
connection at the same time? Well, the hours that he/she had put behind adding images, description, title, details, etc are 
now gone. Mobile forms aren’t easy, web forms could be friendly, but then again do consider the attention time. 
Your app just asked someone to spend 20 minutes filling in some information that now suddenly is nowhere. 
Chances are that you are going to lose the user
